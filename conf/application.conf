vizRc210 {
  dataDir = ${HOME}/vizrc210
  namedDataFile = ${vizRc210.dataDir}/named.json
  memoryFile = ${vizRc210.dataDir}/memory.txt
  historyDir = ${vizRc210.dataDir}/history
  dataStoreFile = ${vizRc210.dataDir}/datastore.json
  usersFile = ${vizRc210.dataDir}/users.json
  sessionFile = ${vizRc210.dataDir}/sessions.json
  serialPortsFile = ${vizRc210.dataDir}/serialPort.txt
  sendLog = ${vizRc210.dataDir}/sendlog.log // comment to disable
  expectedRcLines = 4132 // 4097 + 15 * 20 // main ints extended + macros * extendSlots.
  showProgressEvery = 53

  stopSendOnError = true



  authentication {
    message = Welcome to the RC-210 Controller Editor
    storeSessionOnDisk = true
    defaultAdmin {
      // This credentials may be used to login as admin when there is either:
      // 1. No <vardir>>/users/users.json file
      callsign = DEFAULT
      password = swordfish
    }

    maxSessionTime = 2 hours
  }
}

play {
  filters.enabled = [
    net.wa9nnn.rc210.security.authorzation.AuthFilter
    ]
  server.websocket.periodic-keep-alive-max-idle = 100 seconds
  modules {
  }
  http{
    secret.key = "swordfish=meeds to handled " // todo
  }
}

//akka {
//  loggers = ["akka.event.slf4j.Slf4jLogger"]
//  # logging must be set to DEBUG to use any of the options below
//  loglevel =     DEBUG
//  # Log level for the very basic logger activated during ActorSystem startup.
//  # This logger prints the log messages to stdout (System.out).
//  # Options: OFF, ERROR, WARNING, INFO, DEBUG
//  stdout-loglevel = "WARNING"
//  # Log the complete configuration at INFO level when the actor
//  # system is started. This is useful when you are uncertain of
//  # what configuration is used.
//  log-config-on-start = off
//  debug {
//    # logging of all user-level messages that are processed by
//    # Actors that use akka.event.LoggingReceive enable function of
//    # LoggingReceive, which is to log any received message at
//    # DEBUG level
//    receive = on
//    # enable DEBUG logging of all AutoReceiveMessages
//    # (Kill, PoisonPill and the like)
//    autoreceive = on
//    # enable DEBUG logging of actor lifecycle changes
//    # (restarts, deaths etc)
//    lifecycle = on
//    # enable DEBUG logging of all LoggingFSMs for events,
//    # transitions and timers
//    fsm = on
//    # enable DEBUG logging of subscription (subscribe/unsubscribe)
//    # changes on the eventStream
//    event-stream = on
//  }
//}
